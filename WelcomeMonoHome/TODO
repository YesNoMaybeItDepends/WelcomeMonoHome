Game: 
  TODO: 
    - Entity whenever it is rescaled it should update any values that depend on scale
    - healthpill collisionboxes ain't right
      they're way smaller than their sprite and debugcollisionrectangle shows
      It's probably because collision box doesn't scale with the sprite scale
    + unsubscribe button from inputs when we destroy it @critical 
    + add scene to update loop
    - If you move the window the list of renderables increases, why? 
    - Why does our ServiceLocator use IService instead of Service? @critical
      it should be like memeservice = servicelocator.getservice<memeservice>();
    + InputService send events
      it should send events whenever input changes, and anyone who cares will listen to it and handle it
    - Render GUI on camera frame, not world frame @project(Game.GUI) 
    - add gameover
    - add start menu @today
    + add button GUI
    - start menu draw biden
    - GUI should work on its own render engine
    - when you kill a hillarious make her explode and kill nearby boolets 
    - Draw rectangles with float values @low 
      SpriteBatch.Draw() normally takes a Vector2 parameter
      Vector2 takes float parameters
      SpriteBatch.Draw() can take a Rectangle parameter
      Rectangle takes Int parameters
      Therefore, there is a discrepancy between drawing textures and drawing rectangles
  Scene Manager: 
    - Manages @Scenes 
  State Manager: 
    - Manages game state?
    - Why can't it be the same as scene manager?
  GUI:
    GUIObject: 
      - needed?
      - container for all gui stuff

  Boolet: 
    - make faster
  Hillarious: 
    - make it smaller tbqh
  DEBUG: 
    - DEBUG is turning into a GUI panel which just displays a list of text vertically
  Sprite: 
    - change origin from middle to topleft (real origin)

Archive:
  + add randomly spawning health pickups @project(Game.TODO)
  + make healthpills despawn  @project(Game.TODO)
  + give healthpills some visual indicator that they're going to despawn @project(Game.TODO)
  + also that they're going to spawn? @project(Game.TODO)
  + When you pick up a pill make it go slightly bigger then quickly small until it disappears @project(Game.HealthPill) @project(Game.TODO)
  x Nez IMGUI stuff @project(Game.TODO)
    Too complicated for now
  + make it so all entities get added to rendererservice and entitiesservice: @project(Game.TODO)
  + they can instantiate and destroy for now @project(Game.TODO)
  + make better hitboxes that can resize to the actual sprite scale @project(Game.TODO)
  + zoom in and out @today @high  @project(Game.TODO)
  + make this @project(Game.CollisionManagerService)
  + noice @project(Game.CollisionManagerService)
  + can shoot @project(Game.BBEG)
  + can move @project(Game.BBEG)
  + boolets fly off guns @project(Game.BBEG)
  + hold down left click to shoot @project(Game.BBEG)
  + hp @project(Game.BBEG)
  + substract hp on boolet hit  @project(Game.BBEG)
  + give it graphics class to position stuff on the screen @project(Game.GUI)
  + barebones @project(Game.GUI.HealthBar)
  + moves towards target @project(Game.Boolet)
  + disappears outside render screen @project(Game.Boolet)
  + collision detection @project(Game.Boolet)
  + player boolets and hillarious boolets @project(Game.Boolet)
  + make player boolets kill hilariouses @project(Game.Boolet)
  + make hillarious boolets kill player @project(Game.Boolet)
  + exists @project(Game.Hillarious)
  + spawn every second @project(Game.Hillarious)
  + collision detection @project(Game.Hillarious)
  + shoot bullets at player @project(Game.Hillarious)
  + print text on screen @project(Game.DEBUG)
  + print text on screen for real @project(Game.DEBUG)
